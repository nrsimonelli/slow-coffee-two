@use './core' as * with (
  $breakpoints: (
    'sm': 640px,
    'md': 768px,
    'lg': 1024px,
    'xl': 1280px,
  )
);

@use './abstract' as *;

@import url('https://fonts.googleapis.com/css2?family=Poppins&display=swap');

:root {
  font-family: 'Poppins', sans-serif;
}

html {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  scroll-behavior: smooth;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: 1.3;
}

body {
  margin: 0;
  padding: 0;
  vertical-align: baseline;
  font-family: 'Poppins', sans-serif;
}

.root {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
}

.wave-layer {
  background-image: url('../images/blob-haikei.svg');
  background-position: center;
  background-repeat: no-repeat;
  background-size: auto 100%;
}

@each $name, $value in $breakpoints {
  @media screen and (min-width: $value) {
    .container {
      min-width: $value;
    }
    .container-#{$name} {
      min-width: $value;
    }
  }
}

.cursor-pointer {
  cursor: pointer;
}

.transition {
  @include options($transition) using ($value) {
    transition-property: $value;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
}

.duration {
  @include options($duration) using ($value) {
    transition-duration: $value;
  }
}

.ease {
  @include options($ease) using ($value) {
    transition-timing-function: $value;
  }
}

// @include variants('responsive' 'hover') using ($props...) {
//   :root.dark {
//     .dark\:bg {
//       @include options($colors, $props...) using ($value) {
//         background: $value;
//       }
//     }
//     .dark\:text {
//       @include options($colors, $props...) using ($value) {
//         color: $value;
//       }
//     }
//   }

//   .bg {
//     @include options($colors, $props...) using ($value) {
//       background: $value;
//     }
//   }

//   .text {
//     @include options($colors, $props...) using ($value) {
//       color: $value;
//     }
//   }

//   .justify {
//     @include options($justify, $props...) using ($value) {
//       justify-content: $value;
//     }
//   }

//   .items {
//     @include options($items, $props...) using ($value) {
//       align-items: $value;
//     }
//   }

//   .hidden {
//     display: none;
//   }

//   .initial {
//     display: initial;
//   }

//   .inherit {
//     display: inherit;
//   }

//   .flex {
//     display: flex;
//     flex-direction: column;
//   }

//   .flex-row {
//     display: flex;
//     flex-direction: row;
//   }

//   .flex-wrap {
//     flex-wrap: wrap;
//   }

//   .flex-wrap-rev {
//     flex-wrap: wrap-reverse;
//   }

//   .flex {
//     @include options($flex, $props...) using ($value) {
//       flex: $value;
//     }
//   }

//   .flex-grow {
//     flex-grow: 1;
//   }

//   .p {
//     @include options($spacing, $props...) using ($value) {
//       padding: $value;
//     }
//   }

//   .px {
//     @include options($spacing, $props...) using ($value) {
//       padding-right: $value;
//       padding-left: $value;
//     }
//   }

//   .py {
//     @include options($spacing, $props...) using ($value) {
//       padding-bottom: $value;
//       padding-top: $value;
//     }
//   }

//   .pt {
//     @include options($spacing, $props...) using ($value) {
//       padding-top: $value;
//     }
//   }

//   .pr {
//     @include options($spacing, $props...) using ($value) {
//       padding-right: $value;
//     }
//   }

//   .pb {
//     @include options($spacing, $props...) using ($value) {
//       padding-bottom: $value;
//     }
//   }

//   .pl {
//     @include options($spacing, $props...) using ($value) {
//       padding-left: $value;
//     }
//   }

//   .m {
//     @include options($spacing, $props...) using ($value) {
//       margin: $value;
//     }
//   }

//   .mx {
//     @include options($spacing, $props...) using ($value) {
//       margin-right: $value;
//       margin-left: $value;
//     }
//   }

//   .my {
//     @include options($spacing, $props...) using ($value) {
//       margin-bottom: $value;
//       margin-top: $value;
//     }
//   }

//   .mt {
//     @include options($spacing, $props...) using ($value) {
//       margin-top: $value;
//     }
//   }

//   .mr {
//     @include options($spacing, $props...) using ($value) {
//       margin-right: $value;
//     }
//   }

//   .mb {
//     @include options($spacing, $props...) using ($value) {
//       margin-bottom: $value;
//     }
//   }

//   .ml {
//     @include options($spacing, $props...) using ($value) {
//       margin-left: $value;
//     }
//   }

//   .text {
//     @include options($fontsize, $props...) using ($value) {
//       font-size: $value;
//     }
//     @include options($lineheight, $props...) using ($value) {
//       line-height: $value;
//     }
//     @include options($align, $props...) using ($value) {
//       text-align: $value;
//     }
//   }

//   .h {
//     @include options($height, $props...) using ($value) {
//       height: $value;
//     }
//   }

//   .w {
//     @include options($width, $props...) using ($value) {
//       width: $value;
//     }
//   }

//   .min-h {
//     @include options($height, $props...) using ($value) {
//       min-height: $value;
//     }
//   }

//   .min-w {
//     @include options($width, $props...) using ($value) {
//       min-width: $value;
//     }
//   }

//   .max-h {
//     @include options($height, $props...) using ($value) {
//       max-height: $value;
//     }
//   }

//   .max-w {
//     @include options($width, $props...) using ($value) {
//       max-width: $value;
//     }
//   }
// }
